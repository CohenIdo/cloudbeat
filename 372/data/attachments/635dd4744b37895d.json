{
    "@timestamp": "2022-04-18T16:44:11.882Z",
    "agent": {
        "ephemeral_id": "59523556-2970-454b-a444-ca93dfb017d5",
        "id": "dbf73730-833d-4a63-b89e-19520f8d91da",
        "name": "kind-mono-control-plane",
        "type": "cloudbeat",
        "version": "8.3.0"
    },
    "cloud": {
        "account": {},
        "instance": {
            "id": "db2d60b9-fffd-4c17-a6a1-b4448c2a8adc",
            "name": "EUS-GHEUS21UBT20EUS5-0436"
        },
        "machine": {
            "type": "Standard_DS2_v2"
        },
        "provider": "azure",
        "region": "eastus",
        "service": {
            "name": "Virtual Machines"
        }
    },
    "cluster_id": "fa4ed2cf-c905-4e7e-8f60-944e62281a92",
    "cycle_id": "c9c3ed11-e8c2-4c0e-8101-fdccf637f115",
    "ecs": {
        "version": "8.0.0"
    },
    "host": {
        "architecture": "x86_64",
        "containerized": true,
        "hostname": "kind-mono-control-plane",
        "ip": [
            "10.244.0.1",
            "10.244.0.1",
            "10.244.0.1",
            "10.244.0.1",
            "172.18.0.2",
            "fc00:f853:ccd:e793::2",
            "fe80::42:acff:fe12:2"
        ],
        "mac": [
            "02:42:ac:12:00:02",
            "4a:ff:f5:89:18:1c",
            "9a:66:ec:95:81:52",
            "aa:6b:73:c5:36:02",
            "f2:d0:f7:09:70:a0"
        ],
        "name": "kind-mono-control-plane",
        "os": {
            "codename": "bullseye",
            "family": "debian",
            "kernel": "5.13.0-1021-azure",
            "name": "Debian GNU/Linux",
            "platform": "debian",
            "type": "linux",
            "version": "11 (bullseye)"
        }
    },
    "resource": {
        "command": "/usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime=remote --container-runtime-endpoint=unix:///run/containerd/containerd.sock --fail-swap-on=false --node-ip=172.18.0.2 --node-labels= --pod-infra-container-image=k8s.gcr.io/pause:3.4.1 --provider-id=kind://docker/kind-mono/kind-mono-control-plane --fail-swap-on=false --cgroup-root=/kubelet",
        "external_data": {
            "config": {
                "apiVersion": "kubelet.config.k8s.io/v1beta1",
                "authentication": {
                    "anonymous": {
                        "enabled": false
                    },
                    "webhook": {
                        "cacheTTL": "0s",
                        "enabled": true
                    },
                    "x509": {
                        "clientCAFile": "/etc/kubernetes/pki/ca.crt"
                    }
                },
                "authorization": {
                    "mode": "Webhook",
                    "webhook": {
                        "cacheAuthorizedTTL": "0s",
                        "cacheUnauthorizedTTL": "0s"
                    }
                },
                "cgroupDriver": "cgroupfs",
                "clusterDNS": [
                    "10.96.0.10"
                ],
                "clusterDomain": "cluster.local",
                "cpuManagerReconcilePeriod": "0s",
                "evictionHard": {
                    "imagefs.available": "0%",
                    "nodefs.available": "0%",
                    "nodefs.inodesFree": "0%"
                },
                "evictionPressureTransitionPeriod": "0s",
                "fileCheckFrequency": "0s",
                "healthzBindAddress": "127.0.0.1",
                "healthzPort": 10248,
                "httpCheckFrequency": "0s",
                "imageGCHighThresholdPercent": 100,
                "imageMinimumGCAge": "0s",
                "kind": "KubeletConfiguration",
                "logging": {},
                "nodeStatusReportFrequency": "0s",
                "nodeStatusUpdateFrequency": "0s",
                "rotateCertificates": true,
                "runtimeRequestTimeout": "0s",
                "shutdownGracePeriod": "0s",
                "shutdownGracePeriodCriticalPods": "0s",
                "staticPodPath": "/etc/kubernetes/manifests",
                "streamingConnectionIdleTimeout": "0s",
                "syncFrequency": "0s",
                "volumeStatsAggPeriod": "0s"
            }
        },
        "pid": "694",
        "stat": {
            "EffectiveGID": "",
            "EffectiveUID": "",
            "Group": "694",
            "Name": "kubelet",
            "Nice": "0",
            "Parent": "1",
            "RealGID": "",
            "RealUID": "",
            "ResidentSize": "69544000",
            "SavedGID": "",
            "SavedUID": "",
            "StartTime": "13608",
            "State": "S",
            "SystemTime": "771",
            "Threads": "15",
            "TotalSize": "1971388000",
            "UserTime": "1243"
        }
    },
    "resource_id": "694",
    "result": {
        "evaluation": "failed",
        "evidence": {
            "process_args": {
                "--/usr/bin/kubelet": "",
                "--bootstrap-kubeconfig": "/etc/kubernetes/bootstrap-kubelet.conf",
                "--cgroup-root": "/kubelet",
                "--config": "/var/lib/kubelet/config.yaml",
                "--container-runtime": "remote",
                "--container-runtime-endpoint": "unix:///run/containerd/containerd.sock",
                "--fail-swap-on": "false",
                "--kubeconfig": "/etc/kubernetes/kubelet.conf",
                "--node-ip": "172.18.0.2",
                "--node-labels": "",
                "--pod-infra-container-image": "k8s.gcr.io/pause:3.4.1",
                "--provider-id": "kind://docker/kind-mono/kind-mono-control-plane"
            },
            "process_config": {
                "config": {
                    "apiVersion": "kubelet.config.k8s.io/v1beta1",
                    "authentication": {
                        "anonymous": {
                            "enabled": false
                        },
                        "webhook": {
                            "cacheTTL": "0s",
                            "enabled": true
                        },
                        "x509": {
                            "clientCAFile": "/etc/kubernetes/pki/ca.crt"
                        }
                    },
                    "authorization": {
                        "mode": "Webhook",
                        "webhook": {
                            "cacheAuthorizedTTL": "0s",
                            "cacheUnauthorizedTTL": "0s"
                        }
                    },
                    "cgroupDriver": "cgroupfs",
                    "clusterDNS": [
                        "10.96.0.10"
                    ],
                    "clusterDomain": "cluster.local",
                    "cpuManagerReconcilePeriod": "0s",
                    "evictionHard": {
                        "imagefs.available": "0%",
                        "nodefs.available": "0%",
                        "nodefs.inodesFree": "0%"
                    },
                    "evictionPressureTransitionPeriod": "0s",
                    "fileCheckFrequency": "0s",
                    "healthzBindAddress": "127.0.0.1",
                    "healthzPort": 10248,
                    "httpCheckFrequency": "0s",
                    "imageGCHighThresholdPercent": 100,
                    "imageMinimumGCAge": "0s",
                    "kind": "KubeletConfiguration",
                    "logging": {},
                    "nodeStatusReportFrequency": "0s",
                    "nodeStatusUpdateFrequency": "0s",
                    "rotateCertificates": true,
                    "runtimeRequestTimeout": "0s",
                    "shutdownGracePeriod": "0s",
                    "shutdownGracePeriodCriticalPods": "0s",
                    "staticPodPath": "/etc/kubernetes/manifests",
                    "streamingConnectionIdleTimeout": "0s",
                    "syncFrequency": "0s",
                    "volumeStatsAggPeriod": "0s"
                }
            }
        },
        "expected": null
    },
    "rule": {
        "audit": "Run the following command on each node:\n```\nps -ef | grep kubelet\n```\nVerify that if the `--make-iptables-util-chains` argument exists then it is set to `true`.\nIf the `--make-iptables-util-chains` argument does not exist, and there is a Kubelet config\nfile specified by `--config`, verify that the file does not set `makeIPTablesUtilChains` to\n`false`.\n",
        "benchmark": {
            "name": "CIS Kubernetes V1.20",
            "version": "v1.0.0"
        },
        "default_value": "By default, `--make-iptables-util-chains` argument is set to `true`.\n",
        "description": "Allow Kubelet to manage iptables.\n",
        "id": "64762605-406e-5801-8953-77f3447eff31",
        "impact": "Kubelet would manage the iptables on the system and keep it in sync. If you are using any other iptables management solution, then there might be some conflicts.\n",
        "name": "Ensure that the --make-iptables-util-chains argument is set to true (Automated)",
        "profile_applicability": "* Level 1 - Worker Node\n",
        "rationale": "Kubelets can automatically manage the required changes to iptables based on how you choose your networking options for the pods. It is recommended to let kubelets manage the changes to iptables. This ensures that the iptables configuration remains in sync with pods networking configuration. Manually configuring iptables with dynamic pod network configuration changes might hamper the communication between pods/containers and to the outside world. You might have iptables rules too restrictive or too open.\n",
        "references": "1. [https://kubernetes.io/docs/admin/kubelet/](https://kubernetes.io/docs/admin/kubelet/)\n",
        "remediation": "If using a Kubelet config file, edit the file to set\n`makeIPTablesUtilChains: true`.\nIf using command line arguments, edit the kubelet service file\n`/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and\nremove the `--make-iptables-util-chains` argument from the\n`KUBELET_SYSTEM_PODS_ARGS` variable.\nBased on your system, restart the `kubelet` service. For example:\n```\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n```\n",
        "section": "Kubelet",
        "tags": [
            "CIS",
            "Kubernetes",
            "CIS 4.2.7",
            "Kubelet"
        ],
        "version": "1.0"
    },
    "type": "process"
}